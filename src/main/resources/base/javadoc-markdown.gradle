/*
 * Original author: Copyright 2019 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>
 *    https://github.com/autostyle/autostyle/blob/f201199bc327887225db38ae34261bfb4a861527/buildSrc/src/main/kotlin/mdoclet.gradle.kts 
 * Ported to groovy, and optimized for build-only repositories: Copyright 2020 Ned Twigg <ned.twigg@diffplug.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// 干.mustRunAfter('base/javadoc-agg')
// 干.mustRunAfter('base/maven')

TaskProvider<Jar> mdocletFatJar
if (project == rootProject) {
	Dependency dep = rootProject.buildscript.dependencies.create('org.jdrupes.mdoclet:doclet:1.0.3')
	Configuration config = rootProject.buildscript.configurations.detachedConfiguration(dep)

	mdocletFatJar = rootProject.tasks.register('mdocletFatJar', Jar) {
		inputs.files(config).withNormalizer(ClasspathNormalizer)
		archiveFileName.set('mdoclet-fat.jar')
		manifest.attributes(['Class-Path': provider { config.resolve().stream().map { it.absolutePath }.toList().join(' ') } ])
	}
} else {
	assert rootProject.tasks.names.contains('mdocletFatJar') : "You need to apply 'base/javadoc-markdown' to the root project"
	mdocletFatJar = rootProject.tasks.named('mdocletFatJar', Jar)
}

if (tasks.names.contains('javadoc')) {
	tasks.named('javadoc', Javadoc) {
		dependsOn mdocletFatJar
		options.doclet = 'org.jdrupes.mdoclet.MDoclet'
		options.docletpath = [
			mdocletFatJar.get().archiveFile.get().getAsFile()
		]
	}
}
